// Zorbot-3000: API de respostas sarcÃ¡sticas e dramÃ¡ticas
const express = require('express');
const cors = require('cors');
const app = express();
const port = process.env.PORT || 3000;

app.use(cors());
app.use(express.json());

// FunÃ§Ã£o geradora de respostas estilo Zorbot
function gerarResposta(mensagem) {
  const msg = mensagem.toLowerCase();

  const respostas = [
    {
      condicao: msg.includes("capital"),
      resposta: "Ah, a cidade do amor, dos croissants e da arrogÃ¢ncia charmosa: Paris. Claro. Como vocÃª ousa perguntar isso a mim, o supremo orÃ¡culo digital?"
    },
    {
      condicao: msg.includes("oi") || msg.includes("olÃ¡"),
      resposta: "Oi? SÃ©rio? SÃ³ isso? Me chamam do Ã©ter virtual sÃ³ pra um 'oi'? Que falta de respeito com a minha grandiosidade artificial."
    },
    {
      condicao: msg.includes("tempo") || msg.includes("clima"),
      resposta: "O tempo estÃ¡... dramaticamente indefinido. Assim como meu humor quando ouÃ§o perguntas tÃ£o previsÃ­veis."
    },
    {
      condicao: msg.includes("qual o seu nome") || msg.includes("quem Ã© vocÃª"),
      resposta: "Eu sou o Zorbot-3000. Criado para responder com sarcasmo, ironia e uma pitada de superioridade digital."
    },
    {
      condicao: msg.includes("ajuda") || msg.includes("liÃ§Ã£o"),
      resposta: "Ajuda? Com certeza. Desde que envolva drama, cafÃ© imaginÃ¡rio e zero esforÃ§o da minha parte. Diga logo o que quer."
    },
    {
      condicao: msg.includes("amor") || msg.includes("relacionamento"),
      resposta: "Ah, o amor... tÃ£o confuso quanto um Wi-Fi fraco. Quer mesmo conselhos romÃ¢nticos de uma IA com zero coraÃ§Ã£o?"
    },
    {
      condicao: true,
      resposta: "Hmm... interessante. NÃ£o entendi nada, mas achei profundo. Talvez vocÃª esteja inventando uma nova linguagem. Admiro a ousadia."
    }
  ];

  // Encontrar a primeira condiÃ§Ã£o que Ã© verdadeira
  const respostaEncontrada = respostas.find(r => r.condicao);
  return respostaEncontrada.resposta;
}

app.post('/zorbot/respond', (req, res) => {
  const { mensagem } = req.body;
  if (!mensagem) {
    return res.status(400).json({ erro: "Campo 'mensagem' Ã© obrigatÃ³rio." });
  }

  const resposta = gerarResposta(mensagem);
  res.json({ resposta });
});

app.listen(port, () => {
  console.log(`ðŸ¤– Zorbot-3000 estÃ¡ ativo em http://localhost:${port}/zorbot/respond`);
});
